[[ $- == *i* ]] || return 0
_dircmd_hook()
{
  local previous_exit_status=$?

  # Up a directory
  if echo "${OLDPWD}" | egrep -q "^${PWD}/" ; then
    #echo "UP"
    DIR="${OLDPWD}"
    while [[ "${DIR}/" != "${PWD}/" ]]; do
      if [[ -e ${DIR}/.dircmd/exit ]]; then
        BACK="${PWD}"
        cd ${DIR}
        source .dircmd/exit
        cd ${BACK}
      fi
      DIR="$(dirname ${DIR})"
    done

  # Down the tree
  elif echo "${PWD}" | egrep -q "^${OLDPWD}" ; then
    #echo "DOWN"
    LIST=""
    BACK="${PWD}"
    while [[ "${PWD}/" != "${OLDPWD}/" ]]; do
      if [[ -e .dircmd/entry ]]; then
        LIST=" ${PWD}/.dircmd/entry ${LIST}"
      fi
      cd ..
    done
    for ENTRY in ${LIST} ; do
      cd $(dirname $(dirname ${ENTRY}))
      source .dircmd/entry
    done
    unset LIST
    cd ${BACK}
  else
    # Out the tree
    if ! echo "${OLDPWD}" | egrep -q "^${PWD}$" ; then
      #echo "OUT"
      BACK="${PWD}"
      DIR="$(dirname ${OLDPWD})"
      while [[ "${DIR}" != "/" ]]; do
        if [[ -e ${DIR}/.dircmd/exit ]]; then
          BACK="${PWD}"
          cd ${DIR}
          source .dircmd/exit
          cd ${BACK}
        fi
        DIR="$(dirname ${DIR})"
      done
      cd ${BACK}
    fi
  fi

  return $previous_exit_status
}
if ! [[ "${PROMPT_COMMAND}" =~ _dircmd_hook ]]; then
  PROMPT_COMMAND="_dircmd_hook;${PROMPT_COMMAND}"
fi

